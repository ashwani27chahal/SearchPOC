@model IEnumerable<SearchPOC.Data.Person>

@{
    ViewBag.Title = "Find People";
}

<h2>Find People</h2>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@

<div class="row">
    <div class="col-md-6 col-md-offset-6">
        <div id="custom-search-input">
            <div class="input-group col-md-12">
                <input id="search" type="text" class="form-control input-lg" placeholder="First or Last Name" />
                <span class="input-group-btn">
                    <button id="find" class="btn btn-info btn-lg" type="button">
                        <i class="glyphicon glyphicon-search"></i>
                    </button>
                </span>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div id="people"></div>
</div>




@section scripts{
  <script type="text/javascript">

    $(document).ready(function () {
        $("#find").click(function () {
            var id = $("#search").val();
            var peopleDiv = $("#people");
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("Search"))",
                data: { "q": id },
                success: function (data) {
                    var result = "";
                    var records = JSON.parse(data)
                    
                    peopleDiv.html('');

                    if (records.length === 0) {
                        peopleDiv.html("<div class='alert alert-danger'>No Record found</div>");
                        return;
                    }

                    $.each(records, function (id, person) {
                        result += '<b>Name : </b>' + person.FirstName + ' ' + person.LastName + '<br/>' +
                                    '<b> Email :</b>' + person.Email + '<br/>' +
                                     '<b> Phone :</b>' + person.PhoneNumber + '<br/>' +
                                      '<b> Addres :</b> ' + person.Address[0].Street + ', ' + person.Address[0].Region + '<br>' +
                                      person.Address[0].Country+

                                      '<hr/>';
                    });
                    peopleDiv.html(result);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve books.');
                }
            });
        });
    });
</script> 
}